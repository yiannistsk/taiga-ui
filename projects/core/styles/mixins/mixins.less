// centering with translate
.center-left() {
    position: absolute;
    left: 50%;
    transform: translate(-50%, 0);
}

.center-top() {
    position: absolute;
    top: 50%;
    transform: translate(0, -50%);
}

.center-all() {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

// clearfix
.clearfix() {
    &:after {
        content: '';
        display: table;
        clear: both;
    }
}

//.fullsize
.fullsize(@position: absolute, @mode: height) {
    position: @position;
    top: 0;
    left: 0;

    & when (@mode = height) {
        width: 100%;
        height: 100%;
    }

    & when (@mode = inset) {
        bottom: 0;
        right: 0;
    }
}

.clearbtn() {
    appearance: none;
    padding: 0;
    border: 0;
    background: none;
    font-size: inherit;
    line-height: inherit;
}

.clearinput() {
    padding: 0;
    border: 0;
    border-radius: inherit;
    background: none;
    font-size: inherit;
    line-height: inherit;
    font-weight: inherit;
    color: inherit;
    caret-color: currentColor;
    outline: none;
    appearance: none;
    word-break: keep-all;
    -webkit-text-fill-color: currentColor; // for Safari

    &:-webkit-autofill,
    &:-webkit-autofill:hover,
    &:-webkit-autofill:focus {
        border-radius: inherit;
        -webkit-text-fill-color: inherit !important;
        color: inherit !important;
        background-color: transparent !important;
        -webkit-box-shadow: 0 0 0 1000px var(--tui-autofill) inset !important; // to overlay native background
    }
}

.visually-hidden() {
    position: absolute;
    height: 1px;
    width: 1px;
    margin: -1px;
    border: 0;
    padding: 0;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    clip-path: inset(0);
}

// customize native scroll
.customize-scroll() {
    // exclude non-supporting browsers
    @media all and (-webkit-min-device-pixel-ratio: 0) and (min-resolution: 0.001dpcm) {
        &::-webkit-scrollbar,
        &::-webkit-scrollbar-thumb {
            width: 16px;
            height: 16px;
            border-radius: 100px;
            background-clip: padding-box;
            border: 6px solid transparent;
        }

        &::-webkit-scrollbar {
            background-color: transparent;
        }

        &::-webkit-scrollbar-thumb {
            background-color: var(--tui-clear-hover);
        }

        &::-webkit-scrollbar-thumb:hover {
            background-color: var(--tui-clear-active);
        }

        &::-webkit-scrollbar-thumb:active {
            background-color: var(--tui-text-03);
        }
    }
}

// shadow
.shadow(@mode: 1) {
    // Default
    & when (@mode = 1) {
        box-shadow: 0 4px 24px rgba(0, 0, 0, 0.12);
    }

    // Dropdown
    & when (@mode = 2) {
        box-shadow: 0 8px 16px rgba(51, 51, 51, 0.2);
    }

    // Modal
    & when (@mode = 3) {
        box-shadow: 0 18px 30px rgba(51, 51, 51, 0.52);
    }

    // Sidebar
    & when (@mode = 4) {
        box-shadow: 4px 0 24px rgba(0, 0, 0, 0.12);
    }

    // Hover
    & when (@mode = 5) {
        box-shadow: 0 12px 36px rgba(0, 0, 0, 0.2);
    }

    // Navigation
    & when (@mode = 6) {
        box-shadow: 0 2px 16px rgba(0, 0, 0, 0.08);
    }

    // Modal mobile
    & when (@mode = 7) {
        box-shadow: 0 -16px 28px rgba(51, 51, 51, 0.24);
    }
}

.inset-border(@direction: bottom, @mode: none) {
    & when (@direction = bottom) {
        box-shadow: inset 0 -1px var(--tui-base-03);

        & when (@mode = light) {
            box-shadow: inset 0 -1px rgba(255, 255, 255, 0.24);
        }

        & when (@mode = dark) {
            box-shadow: inset 0 -1px rgba(51, 51, 51, 0.24);
        }
    }

    & when (@direction = top) {
        box-shadow: inset 0 1px var(--tui-base-03);

        & when (@mode = light) {
            box-shadow: inset 0 1px rgba(255, 255, 255, 0.24);
        }

        & when (@mode = dark) {
            box-shadow: inset 0 1px rgba(51, 51, 51, 0.24);
        }
    }

    & when (@direction = left) {
        box-shadow: inset 1px 0 var(--tui-base-03);

        & when (@mode = light) {
            box-shadow: inset 1px 0 rgba(255, 255, 255, 0.24);
        }

        & when (@mode = dark) {
            box-shadow: inset 1px 0 rgba(51, 51, 51, 0.24);
        }
    }

    & when (@direction = right) {
        box-shadow: inset -1px 0 var(--tui-base-03);

        & when (@mode = light) {
            box-shadow: inset -1px 0 rgba(255, 255, 255, 0.24);
        }

        & when (@mode = dark) {
            box-shadow: inset -1px 0 rgba(51, 51, 51, 0.24);
        }
    }
}

// transition
.transition(@param, @speed: 0.3s) {
    transition-property: @param;
    transition-duration: @speed;
    transition-timing-function: ease-in-out;
}

// dashed border
.dashed-border(@color: currentColor, @alignment: bottom, @space: 4) {
    @size: unit(@space, px);
    @percentage: (100% / @space * 2);
    background-image: linear-gradient(to right, @color 0%, @color @percentage, transparent @percentage);
    background-position: 0 @alignment;
    background-size: @size 1px;
    background-repeat: repeat-x;
}

// typical opacity properties for icons
.opacity-icon() {
    opacity: 0.8;

    &:hover {
        opacity: 1;
    }
}

.hoverable-with-shadow() {
    .shadow();
    .transition(all);
    cursor: pointer;
    transition-property: transform, box-shadow;
    will-change: transform, box-shadow;

    &:hover {
        .shadow(5);
        transform: translateY(-@space);
    }
}

// gradient
.gradient(@start-color, @end-color, @angle: 45deg) {
    background-image: linear-gradient(@angle, @start-color 0%, @end-color 100%);
}

// typical properties for text overflow with ellipsis
.text-overflow() {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

/* stylelint-disable selector-max-specificity */
.text-overflow-with-fade(@color: rgba(255,255,255,1), @transparentColor: rgba(255,255,255,0), @width: 30px) {
    position: relative;
    overflow: hidden;

    &:after {
        content: '';
        position: absolute;
        top: 0;
        right: 0;
        width: @width;
        height: 100%;
        background-image: linear-gradient(to right, @transparentColor 0%, @color 80%, @color 100%);
        pointer-events: none;
    }
}
/* stylelint-enable selector-max-specificity */

.createStackingContext() {
    position: relative;
    z-index: 0;
}

//spaces
.tui-space(@direction, @size) {
    & when (@direction = all) {
        margin: @space * @size;
    }

    & when (@direction = top) {
        margin-top: @space * @size;
    }

    & when (@direction = bottom) {
        margin-bottom: @space * @size;
    }

    & when (@direction = vertical) {
        margin-top: @space * @size;
        margin-bottom: @space * @size;
    }

    & when (@direction = left) {
        margin-left: @space * @size;
    }

    & when (@direction = right) {
        margin-right: @space * @size;
    }

    & when (@direction = horizontal) {
        margin-right: @space * @size;
        margin-left: @space * @size;
    }
}

.contrast-background(@background) {
    background: @background;
    color: contrast(@background, #333, #fff);
}

.blurred-background(@color: #fff) {
    background: fade(@color, 70%);
    backdrop-filter: blur(7px);
}
